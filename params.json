{"name":"Travel","tagline":"Expedia API travel site","body":"# Travel\r\n\r\nExpedia API travel site\r\n\r\n## Uses:\r\n\r\nAngular JS + [Lineman](http://www.linemanjs.com).\r\n\r\n1. Template Precompilation into Angulars $templateCache using `grunt-angular-templates`\r\n2. A basic login, logout service bound to sample routes inside `config/server.js`\r\n3. Configured [grunt-ngmin](https://github.com/btford/grunt-ngmin) so you don't have to fully qualify angular dependencies.\r\n4. Auto generated [sourcemaps](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/) with inlined sources via [grunt-concat-sourcemap](https://github.com/kozy4324/grunt-concat-sourcemap) (you'll need to [enable sourcemaps](http://cl.ly/image/1d0X2z2u1E3b) in Firefox/Chrome to see this)\r\n5. [Unit Tests](https://github.com/linemanjs/lineman-angular-template/tree/master/spec) and [End-to-End Tests](https://github.com/linemanjs/lineman-angular-template/tree/master/spec-e2e)\r\n6. Configuration to run [Protractor](https://github.com/juliemr/protractor) for End-to-End Tests\r\n7. [Restangular](https://github.com/mgonto/restangular) AngularJS module as opposed to $http or $resource\r\n8. Express / node.js Expedia API consumed via Lineman's server proxy\r\n9. [Livereload plugin](https://github.com/linemanjs/lineman-livereload)\r\n10. [Bower plugin](https://github.com/linemanjs/lineman-bower)\r\n11. CoffeeScript\r\n12. Bootstrap\r\n13. Angular UI Router\r\n14. CoffeLint\r\n\r\n## Instructions\r\n1. `$ git clone -b lineman https://git@bitbucket.org:jjacobs2000/travel.git`\r\n2. `$ cd travel`\r\n3. `$ sudo npm install -g lineman`\r\n4. `$ sudo npm install -g bower`\r\n5. `$ npm install`\r\n6. `$ bower install`\r\n\r\n## Running in development mode\r\n1. `$ export NODE_ENV=development`\r\n2. `$ node server/server.js`\r\n3. `$ lineman run`\r\n4. Your browser will open to localhost:8000\r\n\r\n## Running in production mode\r\n1. `$ export NODE_ENV=production | export PORT=80`\r\n2. `$ lineman build`\r\n3. Deploy `server` and `dist` folders to external server.\r\n4. `$ cd server`\r\n5. `$ npm install --production`\r\n6. Run server/server.js script with [forever](http://labs.telasocial.com/nodejs-forever-daemon/)\r\n\r\n## Running Tests\r\n\r\n#_NOTE_: Tests are not configured yet for current files.  On my TODO list, along with running on Travis CI.\r\n\r\nTesting procedures based on [@davemo](http://www.github.com/davemo)'s [Testing Strategies for Angular JS](http://www.youtube.com/watch?v=UYVcY9EJcRs) screencast, and contains all the tests we wrote in the screencast and a few more!\r\n\r\nTo run the unit tests:\r\n\r\n1. `lineman run` from 1 terminal window\r\n2. `lineman spec` from another terminal window, this will launch Testem and execute specs in Chrome\r\n\r\nTo run the end-to-end tests:\r\n\r\n1. `npm install protractor`\r\n2. `brew install selenium-server-standalone`\r\n3. Make sure you have chrome installed.\r\n4. `lineman run` from 1 terminal window\r\n5. `lineman grunt spec-e2e` from another terminal window\r\n\r\n  Troubleshooting:\r\n\r\n    If you see this error: Warning: there's no selenium server jar at the specified location,\r\n    you may need to change the selenium-server-standalone jar version in config/spec-e2e.js\r\n    to the actual you see in /usr/local/opt/selenium-server-standalone (brew users may have a libexec directory).\r\n\r\n    If you see this error: Fatal error: The path to the driver executable must be set by the\r\n    webdriver.chrome.driver system property, you may need to download the chromedriver\r\n    (https://code.google.com/p/selenium/wiki/ChromeDriver) and place it in /usr/local/bin (mac).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}